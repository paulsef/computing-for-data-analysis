source('~/Desktop/R/Assignment_3/best1.R')
best1("TX", "heart failure")
source('~/Desktop/R/Assignment_3/best1.R')
best1("TX", "heart failure")
source('~/Desktop/R/Assignment_3/best1.R')
best1("TX", "heart failure")
best1("MD", "heart failure")
source('~/Desktop/R/Assignment_3/best1.R')
best1("MD", "pneumonia")
best1("TX", "heart attack")
best1("MA", "pneumonia")
source('~/Desktop/R/Assignment_3/best.R')
source("http://spark-public.s3.amazonaws.com/compdata/scripts/submitscript.R")
source("submitscript.R")
source("http://spark-public.s3.amazonaws.com/compdata/scripts/submitscript.R")
submit()
submit()
2
submit
submit()
submit()
best("NY", "pneumonia")
source('~/Desktop/R/Assignment_3/best.R')
submit()
source('~/Desktop/R/Assignment_3/best.R')
submit()
source('~/Desktop/R/Assignment_3/best.R')
source('~/Desktop/R/Assignment_3/rankhospital.R')
rankhospital("MD", "heart failure", "best")
rankhospital("MD", "heart failure", "worst")
rankhospital("MD", "heart failure", 23)
source('~/Desktop/R/Assignment_3/rankhospital.R')
source('~/Desktop/R/Assignment_3/rankhospital.R')
source('~/Desktop/R/Assignment_3/rankhospital.R')
source('~/Desktop/R/Assignment_3/rankhospital.R')
rankhospital("MD", "heart failure", 23)
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MD", "heart attack", "23")
rankhospital("MD", "heart attack", "1")
rankhospital("TX", "heart attack", "1")
rankhospital("TX", "heart failure", "1")
rankhospital("TX", "heart failure", 4)
rankhospital("TX", "heart failure", "worst")
rankhospital("TX", "heart failure", 3)
rankhospital("TX", "heart failure", "best")
rankhospital("TX", "heart attack", "worst")
rankhospital("MD", "heart attack", 3)
rankhospital("MD", "heart attack", "worst")
source('~/Desktop/R/Assignment_3/rankhospital.R')
rankhospital("MD", "heart attack", "worst")
outcome_data <- read.csv("outcome-of-care-measures.csv",
colClasses = "character")
outcome_data2 <- subset(outcome_data, outcome_data[, 7] == "MD")
rstudio::viewData(outcome_data2)
nrow(outcome_data2)
outcome_data[45,2]
outcome_data2[45,2]
source('~/Desktop/R/Assignment_3/rankhospital.R')
rankhospital("MD", "heart attack", "worst")
source('~/Desktop/R/Assignment_3/rankhospital.R')
rankhospital("MD", "heart attack", "worst")
source("http://spark-public.s3.amazonaws.com/compdata/scripts/submitscript.R")
submit
submit()
submit()
submit()
source('~/Desktop/R/Assignment_3/rankhospital.R')
submit()
submit()
list = outcome_data[,7]
list
?unique
list <- unique(list)
list
result_list <- lapply(state_list, rankhospital)
result_list <- lapply(list, rankhospital)
rankall("heart attack", "best")
source('~/Desktop/R/Assignment_3/rankall.R')
rankall("heart attack", "best")
source('~/Desktop/R/Assignment_3/rankall.R')
rankall("heart attack", "best")
source('~/Desktop/R/Assignment_3/rankall.R')
rankall("heart attack", "best")
source('~/Desktop/R/Assignment_3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Desktop/R/Assignment_3/rankall.R')
head(rankall("heart attack", 20), 10)
source('~/Desktop/R/Assignment_3/rankall.R')
head(rankall("heart attack", 20), 10)
rankall("heart attack", 20)
source('~/Desktop/R/Assignment_3/rankall.R')
rankall("heart attack", 20)
source('~/Desktop/R/Assignment_3/rankall.R')
rankall("heart attack", 20)
?do.call
?cbind
data <- as.data.frame(list)
head(data)
source('~/Desktop/R/Assignment_3/rankall.R')
head(rankall("heart attack", 20))
source('~/Desktop/R/Assignment_3/rankall.R')
source('~/Desktop/R/Assignment_3/rankall.R')
head(rankall("heart attack", 20))
source('~/Desktop/R/Assignment_3/rankall.R')
source("http://spark-public.s3.amazonaws.com/compdata/scripts/submitscript.R")
submit()
source('~/Desktop/R/Assignment_3/rankall.R')
head(rankall("heart attack", 20))
submit()
submit()
submit()
?postscript
?points
?axis
?gzfile
?windows
??windows
?xfig
?coplot
?barchart
?points
?barlplot
?barplot
?par
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
set.seed(1)
rpois(5,2)
?lattice
?png
?hist
?lsegments
?lines
?points
?text
?xfig
pal <- colorRampPalette(c("red", "yellow", "blue"))
x <- rnorm(100)
plot(x, col = pal(100))
plot(x, col = pal(10))
plot(x, col = pal(100))
plot(x, col = pal(10))
setwd("~/Desktop/R")
homicides <- readLines("homicides.txt")
homicides[1]
grep("[Ss]hooting", homicides)
length(grep("[Ss]hooting", homicides))
length(grep("[Ss]hooting", homicides))
homicide(1000)
homicide[1000]
homicides[1000]
length(grep("Cause Shooting", homicides))
length(grep("Cause: Shooting", homicides))
length(grep("[Cc]ause: [Ss]hooting", homicides))
length(grep("[Cc]ause: [Ss]tabbing", homicides))
?attr
regexpr("<dd>[Ff]ound(.*?)</dd>", homicides)
regexpr("<dd>[Ff]ound(.*?)</dd>", homicides[1:10])
grep["<dd>[Ff]ound(.*?)</dd>", homicides[1:10]]
grep["<dd>[Ff]ound(.*?)</dd>", homicides[1:10])
grep("<dd>[Ff]ound(.*?)</dd>", homicides[1:10])
homicides[2]
regexpr("victim died at scene", homicides[1:10])
regexpr("Victim died at scene", homicides[1:10])
?Classes
mean
print
?UseMethod
methods("mean")
show
gets3method(<genereic>,<class>)
mean
head(gets3method("mean","default"))
getS3method(<genereic>,<class>)
head(getS3method("mean","default"))
tail(getS3method("mean","default"))
x <, c(TRUE, FALSE, TRUE)
x <_ c(TRUE, FALSE, TRUE)
x <- c(TRUE, FALSE, TRUE)
mean(x)
class(x)
as.logical(mean(x))
x <- c(FALSE, TRUE, FALSE)
as.logical(mean(x))
mean(x)
mean.logical(x)
mean.default(x)
mean
method(mean)
methods(mean)
})
})
setClass("polygon",
representation(x = "numeric"
y = "numeric"))
setMethod("plot", "polygon",
function(x, y, ...){
plot(x@x, x$y, type = "n", ...)
xp <- c(x@x, x@x[1])
yp <- c(c@y, x@y[1])
lines(xp, yp)
})
showMethods(plot)
showMethods("plot"")
showMethods("plot")
showMethods("plot")
p <- new("polygon", x = c(1,2,3,4), y = c(1, 2, 1, 2))
setClass("polygon",
representation(x = "numeric"
y = "numeric"))
setMethod("plot", "polygon",
function(x, y, ...){
plot(x@x, x$y, type = "n", ...)
xp <- c(x@x, x@x[1])
yp <- c(c@y, x@y[1])
lines(xp, yp)
})
setClass("polygon",
representation(x = "numeric"
y = "numeric"))
setMethod("plot", "polygon",
function(x, y, ...){
plot(x@x, x$y, type = "n", ...)
xp <- c(x@x, x@x[1])
yp <- c(c@y, x@y[1])
lines(xp, yp)
})
setClass("polygon",
representation(x = "numeric",
y = "numeric"))
setMethod("plot", "polygon",
function(x, y, ...){
plot(x@x, x$y, type = "n", ...)
xp <- c(x@x, x@x[1])
yp <- c(c@y, x@y[1])
lines(xp, yp)
})
p <- new("polygon", x = c(1,2,3,4), y = c(1, 2, 1, 2))
plot(p)
setClass("polygon",
representation(x = "numeric",
y = "numeric"))
setMethod("plot", "polygon",
function(x, y, ...){
plot(x@x, x@y, type = "n", ...)
xp <- c(x@x, x@x[1])
yp <- c(c@y, x@y[1])
lines(xp, yp)
})
plot(p)
p <- new("polygon", x = c(1,2,3,4), y = c(1, 2, 1, 2))
plot(p)
setClass("polygon",
representation(x = "numeric",
y = "numeric"))
setMethod("plot", "polygon",
function(x, y, ...){
plot(x@x, x@y, type = "n", ...)
xp <- c(x@x, x@x[1])
yp <- c(x@y, x@y[1])
lines(xp, yp)
})
p <- new("polygon", x = c(1,2,3,4), y = c(1, 2, 1, 2))
plot(p)
?colorRamp
?rgb
rgb(0,1,0)
?grep
x <- "she likes rum raisin after running hard"
regexpr(^s(.*?)r, x)
regexpr('^s(.*?)r', x)
getMethod?
?getMethod
?getS3method
?showmethods
?showMethods
?setOldClass
setwd("~/Desktop/R/Assignment_4")
?regexpr
cause <- "asphxiation"
cause[1]
cause[1][1]
cause[[1]]
?substr
substr(cause, 1, 1)
substr(cause, 2, length(cause))
length(cause)
substr(cause, 2, last)
substr(cause, 2, nchar(cause))
pos1 <- substr(cause, 1, 1)
pos2 <- substr(cause, 2, nchar(cause))
toupper(pos1)
length(grep([toupper(pos1)pos1]pos2, homicides))
length(grep("[toupper(pos1)pos1]pos2", homicides))
toupper(pos1)pos1
print(c(toupper(pos1),pos1))
length(grep("[paste0(toupper(pos1)pos1)]pos2", homicides))
length(grep(cause, homicides, ignore.case = TRUE))
cause <- "asphyxiation"
length(grep(cause, homicides, ignore.case = TRUE))
pos2 <- substr(cause, 2, nchar(cause))
length(grep(["toupper(pos1)pos1)]pos2", homicides))
length(grep("[toupper(pos1)pos1)]pos2", homicides))
print(paste0("[", toupper(pos1), pos1, "]"))
print(paste0("[", toupper(pos1), pos1, pos_2, "]"))
print(paste0("[", toupper(pos1), pos1, pos2, "]"))
print(paste0("[", toupper(pos1), pos1, "]", pos2))
source('~/Desktop/R/Assignment_4/problem_1.R')
source('~/Desktop/R/Assignment_4/problem_1.R')
count("asphxyiation")
count("asphyxiation")
source('~/Desktop/R/Assignment_4/problem_1.R')
count("asphyxiation")
source('~/Desktop/R/Assignment_4/problem_1.R')
count("asphyxiation")
count("other")
source('~/Desktop/R/Assignment_4/problem_1.R')
source('~/Desktop/R/Assignment_4/problem_1.R')
count("other")
source('~/Desktop/R/Assignment_4/problem_1.R')
count("other")
source('~/Desktop/R/Assignment_4/problem_1.R')
count("other")
source('~/Desktop/R/Assignment_4/problem_1.R')
count("other")
count("blunt force")
source('~/Desktop/R/Assignment_4/problem_1.R')
count("blunt force")
count("unknown")
source('~/Desktop/R/Assignment_4/problem_1.R')
count("unknown")
count("other")
source('~/Desktop/R/Assignment_4/problem_1.R')
count("othe")
source('~/Desktop/R/Assignment_4/problem_1.R')
source('~/Desktop/R/Assignment_4/problem_1.R')
count("othe")
count()
count("pio")
source('~/Desktop/R/Assignment_4/problem_1.R')
count("pio")
count()
source('~/Desktop/R/Assignment_4/problem_1.R')
count()
count("pio")
source('~/Desktop/R/Assignment_4/problem_1.R')
source('~/Desktop/R/Assignment_4/problem_1.R')
count("pio")
source('~/Desktop/R/Assignment_4/problem_1.R')
source('~/Desktop/R/Assignment_4/problem_1.R')
count("pio")
count("unkown")
count("unknown")
source('~/Desktop/R/Assignment_4/problem_1.R')
num <- count("other")
num
source('~/Desktop/R/Assignment_4/count.R')
num <- count("shooting")
num
count("other")
count("unknown")
num <- count("unknown")
print(num)
class(num)
num <- count("Unknown")
source('~/Desktop/R/Assignment_4/count.R')
num <- count()
source('~/Desktop/R/Assignment_4/count.R')
num <- count()
num <- count("unknown")
num
source('~/Desktop/R/Assignment_4/count.R')
num <- count()
source('~/Desktop/R/Assignment_4/count.R')
num <- count("unknown")
num
source('~/Desktop/R/Assignment_4/count.R')
num <- count()
tolower()
tolower(NULL)
source('~/Desktop/R/Assignment_4/count.R')
num <- count()
source('~/Desktop/R/Assignment_4/count.R')
num <- count()
num <- count("Unknown")
num
source('~/Desktop/R/Assignment_4/count.R')
num <- count("Unknown")
num
num <- count("Ulnknown")
set.seed(31);
heightsCM = rnorm(30,mean=188, sd=5);
weightsK = rnorm(30,mean=84,sd=3);
hasDaughter = sample(c(TRUE,FALSE),size=30,replace=T);
dataFrame = data.frame(heightsCM,weightsK,hasDaughter);
?subset
rstudio::viewData(dataFrame)
mean(subset(dataFrame, dataFrame[1,] > 188))
dataFrameSubset <- subset(dataFrame, dataFrame[1,] > 188))
dataFrameSubset <- subset(dataFrame, dataFrame[1,] > 188)
rstudio::viewData(dataFrameSubset)
mean(dataFrameSubset$weightsK)
dataFrameSubset1 <- dataframe[heightsCM > 188]
dataFrameSubset1 <- dataFrame[heightsCM > 188]
dataFrameSubset1 <- dataFrame[dataFrame$heightsCM > 188]
dataFrameSubset1 <- dataFrame[dataFrame$heightsCM > 188,]
mean(dataFrameSubset1$weightsK)
set.seed(41)
rcauchy(100)
rcauchy(100)
set.seed(41)
variables <- rcauchy(100)
set.seed(415)
?sample
sample(variables, 10, raplace = TRUE)
set.seed(415)
sample(variables, 10, replace = TRUE)
source('~/Desktop/R/Assignment_4/count.R')
homicides <- readLines("homicides.txt")
homicides <- readLines("homicides.txt")
source('~/Desktop/R/Assignment_4/count.R')
count <- function(cause = NULL){
homicides <- readLines("homicides.txt")
#   if (!is.null(cause)){
#     cause <- tolower(cause)
#   }
if (is.null(cause) |
cause != "asphyxiation" &&
cause != "blunt force" &&
cause != "other" &&
cause != "shooting" &&
cause != "stabbing" &&
cause != "unknown"){
stop()
}
#   pos_1 <- substr(cause, 1, 1)
#   pos_2 <- substr(cause, 2, nchar(cause))
#   #print(paste0("Cause: ", "[",toupper(pos_1), pos_1, "]", pos_2))
#   number <- length(grep(
#     paste0("Cause: ", "[",toupper(pos_1), pos_1, "]", pos_2),
#     homicides, ignore.case = TRUE))
number <- length(grep(paste0("Cause: ", cause), ignore.case = TRUE))
number
}
count("other")
source('~/Desktop/R/Assignment_4/count.R')
count("other")
num <- count("unknown")
num
source('~/Desktop/R/Assignment_4/count.R')
is.numeric(num)
count("shooting")
count('lol')
source('~/Desktop/R/Assignment_4/count.R')
count('lol')
count(NULL)
count()
source('~/Desktop/R/Assignment_4/count.R')
source('~/Desktop/R/Assignment_4/count.R')
count()
count("totally")
source('~/Desktop/R/Assignment_4/count.R')
homicides[1]
homicides[2]
homicides[3]
homicides[135]
fix(count)
source('~/Desktop/R/Assignment_4/count.R')
num <- count("shooting")
is.numeric(count)
is.numeric(num)
is.ingetger(num)
is.integer(num)
source('~/Desktop/R/Assignment_4/count.R')
source('~/Desktop/R/Assignment_4/count.R')
source('~/Desktop/R/Assignment_4/count.R')
source('~/Desktop/R/Assignment_4/agecount.R')
source('~/Desktop/R/Assignment_4/agecount.R')
agecount(3)
source('~/Desktop/R/Assignment_4/agecount.R')
agecount(3)
agecount()
agecount(60)
agecount(21)
source('~/Desktop/R/Assignment_4/agecount.R')
agecount(3)
agecount(31)
agecount(30)
x <- c(30;39)
x <- c(30:39)
sum(apply(agecount, x))
?grep
source('~/Desktop/R/Assignment_4/agecount.R')
agecount(3)
source('~/Desktop/R/Assignment_4/agecount.R')
source('~/Desktop/R/Assignment_4/agecount.R')
nume <- agecount(21)
nume
source("http://spark-public.s3.amazonaws.com/compdata/scripts/submitscript4.R")
submit()
submit(manual = T)
submit(manual = T)
submit(manual = T)
submit(manual = T)
submit(manual = T)
library(kernlab)
library(kernlab)
This is an R Markdown document. Markdown is a simple formatting syntax for authoring web pages (click the **MD** toolbar button for help on Markdown).
getwd()
?download.file
